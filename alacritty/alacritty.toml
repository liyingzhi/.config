# $HOME/.config/alacritty/alacritty.toml

# Alacritty 倒是提供了 Windows 下的便携版，但是其配置文件却是在 %APPDATA%\alacritty\alacritty.yml
# 通过 cd $env:APPDATA, 可以进入环境变量 $env:APPDATA指定的路径下

# by Rito Ghosh 2023-10-06

# Alacritty now uses TOML formatting for its config files.
# This is a simple example.

# There are the specification here: https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd
# It is not obvious how it translates to TOML. But it is extremely straightforward.

# example: WINDOW, COLORS, etc. are tables, and should be represented as [window], [colors], respectively.
# specifics of variables go under them. e.g.- look under "dynamic_padding" under-
# https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd#window
# write `dynamic_padding = true` (without backticks -`) under the table [window]
# for variables with multiple values, use "dotted keys". Like setting `padding.x = 5` under [window].
# This is simple. If not clear, do several trials and errors.

# Below is my initial set-up. The TOML homepage (https://toml.io/en/v1.0.0) was very helpful in figuring this out.
# I put the file alacritty.toml in $HOME/.config/alacritty. However it can be kept anywhere among the places mentioned in
# https://github.com/alacritty/alacritty/tree/master#configuration

# 不指定 TERM 会导致一些旧机器通过 ssh 连接时无法正常工作
[env]
  TERM = "xterm-256color"

[window]

opacity = 0.85
blur = true
padding.x = 5
padding.y = 5
startup_mode = "Maximized"
# decorations = "Full"
# decorations_theme_variant = "Light" # "Dark"

[font]

# normal.family = "Source Code Pro"
normal.family = "Hack Nerd font"
bold.family = "Source Code Pro"
italic.family = "Source Code Pro"
bold_italic.family = "Source Code Pro"

size = 15

[terminal]
shell = { program = "bash", args = ["-l"] }

# 鼠标配置
[mouse]
  # 打字的时候临时隐藏鼠标
  hide_when_typing = true

[cursor]
style = "Beam"

# Tip: for inspiration, look for values in the source code files of your favorite VS Code themes, and use the color picker in
# Google to test colors before setting a value, or simply using an editor such as VS Code where colors are displayed in a
# small box when a HEX is detected by the editor.
